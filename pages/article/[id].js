import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState } from "react";

const EditArticle = ({ editedItem }) => {
  const [handleTitle, setHandleTitle] = useState("");
  const [handleImage, setHandleImage] = useState("");
  const [handleDesc, setHandleDesc] = useState("");
  const [preview, setPreview] = useState(false);

  const router = useRouter();

  // const handleSave = (e) => {
  //   e.preventDefault();
  //   const storageItem = JSON.parse(localStorage.getItem("itemById"));
  //   storageItem.name = handleTitle;
  //   localStorage.setItem("itemById", JSON.stringify(storageItem));

  //   router.push("/");
  // };

  const handlePreview = (e) => {
    e.preventDefault();
    setPreview(true);
  };

  return (
    <div className="flex h-screen">
      <Head>
        <title>{editedItem.name} - WaySeven</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex-[50%] border-r border-gray-300 px-8 pt-8">
        <form>
          <div>
            <label>Title</label>
            <input
              type="text"
              className="border-2 border-gray-300 rounded-lg py-1 px-2 w-full outline-none focus:border-gray-400 my-4"
              value={handleTitle}
              onChange={(e) => setHandleTitle(e.target.value)}
              placeholder={editedItem.name}
            />
          </div>
          <div>
            <label>Image URL</label>
            <input
              type="text"
              className="border-2 border-gray-300 rounded-lg py-1 px-2 w-full outline-none focus:border-gray-400 my-4"
              value={handleImage}
              onChange={(e) => setHandleImage(e.target.value)}
              placeholder={editedItem.url}
            />
          </div>
          <div>
            <label>Description</label>
            <textarea
              type="text"
              className="h-80 border-2 border-gray-300 rounded-lg py-1 px-2 w-full outline-none focus:border-gray-400 my-4"
              value={handleDesc}
              onChange={(e) => setHandleDesc(e.target.value)}
              placeholder={editedItem.description}
            />
          </div>
          <div className="space-x-3">
            <button
              className="bg-blue-500 text-white font-semibold border-2 border-blue-500 py-1.5 px-14 rounded-xl hover:bg-blue-700 transition-all"
              // onClick={handleSave}
              disabled
            >
              Save
            </button>
            <button
              className="bg-white text-blue-500 font-semibold py-1.5 px-14 rounded-xl hover:bg-blue-700 hover:text-white transition-all border-2 border-blue-500"
              onClick={handlePreview}
            >
              Preview
            </button>
          </div>
        </form>
      </div>
      {preview ? (
        <div className="flex-[50%] pt-8">
          <div className="flex flex-col">
            <div className="flex-[40%] flex justify-center items-center border-b border-gray-300 pb-6">
              <img
                src={handleImage === "" ? editedItem.url : handleImage}
                alt={editedItem.name}
                className="h-[350px]"
              />
            </div>
            <div className="flex-[60%] p-6 mt-6">
              <div className="flex items-center justify-between mb-6">
                <h1 className="text-[25px]">
                  {handleTitle === "" ? editedItem.name : handleTitle}
                </h1>
              </div>
              <p className="">
                {handleDesc === "" ? editedItem.description : handleDesc}
              </p>
            </div>
          </div>
        </div>
      ) : (
        <div className="flex-[50%] pt-8">
          <div className="flex flex-col">
            <div className="flex-[40%] flex justify-center items-center border-b border-gray-300 pb-6">
              <img
                src={editedItem.url}
                alt={editedItem.name}
                className="h-[350px]"
              />
            </div>
            <div className="flex-[60%] p-6 mt-6">
              <div className="flex items-center justify-between mb-6">
                <h1 className="text-[25px]">{editedItem.name}</h1>
              </div>
              <p className="">{editedItem.description}</p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default EditArticle;

export async function getServerSideProps(ctx) {
  const { id } = ctx.params;

  const { data } = await axios.get(
    `http://localhost:3000/api/collections/${id}`
  );
  return {
    props: {
      editedItem: data.filteredItem[0],
    },
  };
}
